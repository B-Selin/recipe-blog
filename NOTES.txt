* DAY 1

** HOW TO CREATE THE RECIPES PAGE WITH THE LIST OF ALL THE RECIPES

1- Createw a route in routes/recipes.js to handle the index page:

 // GET /recipes 
router.get('/', recipesCtrl.index);

2- Define the index controller function in controllers/recipes.js :
the render link has to have the '/index' at the end, because 'recipes/index' is the ejs file that we are listing all the recipes

async function index(req, res) {
  const recipes = await Recipe.find({});
  res.render('recipes/index', { recipes });
}

This queries the Recipe model for all recipes, and passes them to the index view.

3- Create the index view at views/recipes/index.ejs :

<!-- Loop through recipes and display -->
<% recipes.forEach(function(r) { %>
  <li><%= r.title %></li>  
<% }) %>

This loops through the recipes data and displays the title of each one. We are going to change this into an href later

4- Import the recipes router in server.js:

const recipesRouter = require('./routes/recipes');

app.use('/recipes', recipesRouter); 

This will handle the routes

5- Add a link to the index page in views/partials/header.ejs so when a user clicks this link, it will send a GET request to /recipes.:

<a href="/recipes">All Recipes</a>


* DAY 2

**HOW TO ADD/CREATE AND SHOW INDIVIDUAL RECIPES

1- Created a GET route in routes/recipes.js to display the form:
// GET /recipes/new
router.get('/new', recipesCtrl.new);


2- Defined the controller function in controllers/recipes.js:
// Render new recipe form
function newRecipe(req, res) {
  res.render('recipes/new');
}

3- Created the new recipe form view at views/recipes/new.ejs

<form method="POST" action="/recipes">
  <label>Title:</label>
  <input type="text" name="title">
  ...and others
  
  <button type="submit">Submit</button>
</form>
The form POSTs to /recipes to handle submission.

4- Created a GET route in routes/recipes.js to show single recipe:

// GET /recipes/:id
router.get('/:id', recipesCtrl.show);

5- Defined the controller function:

// Get recipe by id and render show view

async function showRecipe(req, res) {
  const recipe = await Recipe.findById(req.params.id);
  res.render('recipes/show', { recipe }); 
}

---- also added the unicorn in here, to include the user info in the recipe thats being created ---


6- Created the show template at views/recipes/show.ejs :

<h1><%= recipe.title %></h1>

<p><%= recipe.instructions %></p>